kind: "StatefulSet"
podSecurityPolicy:
  enabled: false
service:
  ports: 
   - name: "forwarder"
     protocol: TCP
     containerPort: 24224
metrics:
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: monitoring-prometheus
    namespace: "monitoring"
    interval: 5s
    scrapeTimeout: 5s
  prometheusRule:
    enabled: true
    additionalLabels: 
      release: monitoring-prometheus
    namespace: "monitoring"
    rules:
      - alert: FluentdDown
        expr: up{job="fluentd"} == 0
        for: 5m
        labels:
          context: fluentd
          severity: warning
        annotations:
          summary: "Fluentd Down"
          description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
      - alert: FluentdScrapeMissing
        expr: absent(up{job="fluentd"} == 1)
        for: 15m
        labels:
          context: fluentd
          severity: warning
        annotations:
          summary: "Fluentd Scrape Missing"
          description: "Fluentd instance has disappeared from Prometheus target discovery"
dashboards:
  enabled: false

# Resource Configuration
resources:
  limits:
    cpu: 1000m
    memory: 512Mi

# Using Kubelet to Get Metadata
podAnnotations:
  fluentbit.io/parser: fluentd_parser

# configs
image:
  tag: "v1.16.2-debian-kafka2-1.0"
configMapConfigs:
  - fluentd-prometheus-conf
fileConfigs:
  01_sources.conf: |-
    <source>
      @type rdkafka_group
      topics my-topic
      format json
      kafka_configs {
        "bootstrap.servers": "my-cluster-kafka-external-bootstrap.kafka.svc.cluster.local:9094",
        "group.id": "discard"
      }
      tag kafka
      #<parse>
      #  @type avro
      #  schema_json {"type":"record","name":"sampleRecord","namespace":"com.mycorp.mynamespace","fields":[{"name": "remote", "type": "string"},{"name": "host", "type": "string"},{"name": "user", "type": "string"},{"name": "method", "type":"string"},{"name": "path", "type": "string"},{"name": "code", "type": "string"},{"name": "size", "type": "string"},{"name": "referer", "type": "string"},{"name": "agent", "type": "string"},{"name":"http_x_forwarded_for", "type": "string"},{"name": "x_b3_traceid", "type": "string"},{"name": "x_b3_spanid", "type": "string"},{"name":"x_b3_parentspanid", "type": "string"},{"name": "x_b3_sampled", "type": "string"}]}
      #  use_confluent_schema false
      #</parse>
    </source>

  02_filters.conf: |-
    <filter **>
      @type prometheus
      <metric>
        name fluentd_input_status_num_records_total
        type counter
        desc The total number of incoming records
        <labels>
          tag ${tag}
          hostname ${hostname}
        </labels>
      </metric>
    </filter>

  03_dispatch.conf: |-

  04_outputs.conf: |-
    <match **>
      @type copy
      <store>
        @type null
      </store>
      <store>
        @type prometheus
        <metric>
          name fluentd_output_status_num_records_total
          type counter
          desc The total number of outgoing records
          <labels>
            tag ${tag}
            hostname ${hostname}
          </labels>
        </metric>
      </store>
    </match>
