name: regression

on:
  push:
    paths:
      - 'base/**'
      - 'overlays/**'
      - 'scripts/**'
      - 'spec/**'
      - '.github/workflows/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  regression:
    permissions: { contents: read }
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: install aqua
        run: |
          curl -sSfL -O https://raw.githubusercontent.com/aquaproj/aqua-installer/v2.1.1/aqua-installer
          echo "c2af02bdd15da6794f9c98db40332c804224930212f553a805425441f8331665  aqua-installer" | sha256sum -c
          chmod +x aqua-installer
          ./aqua-installer
          export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
          export AQUA_GLOBAL_CONFIG=./spec/aqua.yaml
          aqua i -l
      - name: create kind cluster
        run: |
          export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
          kind create cluster --config=./spec/kind_config.yaml
      - name: install argocd
        run: |
          export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
          kustomize build https://github.com/cal324/apps/base/argocd/?ref=HEAD | kubectl apply -n argocd -f -
          kubectl wait po -n argocd -l app.kubernetes.io/name=argocd-server --for condition=Ready --timeout=300s
          kubectl wait po -n argocd -l app.kubernetes.io/name=argocd-dex-server --for condition=Ready --timeout=300s
          kubectl wait po -n argocd -l app.kubernetes.io/name=argocd-repo-server --for condition=Ready --timeout=300s
      - name: install argo apps
        env:
          ENV: ${{ github.ref_name }}
        run: |
          export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
          sed "s@REPLACE_ME@$ENV@" ./spec/template.yaml > env.yaml
          kubectl apply -f env.yaml
          sleep 30
          spec/check_state
      - name: post install test
        run: |
          sleep 300
          sudo apt install ruby curl jq mysql-client -y
          sudo gem install rspec -N
          rspec spec/post_deploy.spec
