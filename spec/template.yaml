apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: k6
spec:
  serviceAccountName: argo
  templates:
    - name: config-k6
      inputs:
        parameters:
        - name: rate
        - name: duration
        - name: path
      resource:
        action: apply
        manifest: |
          apiVersion: v1
          data:
            test.js: |
              import http from 'k6/http';
          
              export const options = {
                discardResponseBodies: true,
                scenarios: {
                  per_vu_scenario: {
                    executor: "constant-arrival-rate",
                    duration: '{{inputs.parameters.duration}}s',
                    rate: {{inputs.parameters.rate}},
                    timeUnit: '1s',
                    preAllocatedVUs: 100,
                  },
                },
              };
          
              export default function () {
                http.get('{{inputs.parameters.path}}');
              }
          kind: ConfigMap
          metadata:
            name: sample-stress-test
            namespace: default

    - name: delete-k6
      resource:
        action: delete
        manifest: |
          apiVersion: k6.io/v1alpha1
          kind: K6
          metadata:
            name: k6-sample
            namespace: default

    - name: apply-k6
      resource:
        action: apply
        manifest: |
          apiVersion: k6.io/v1alpha1
          kind: K6
          metadata:
            name: k6-sample
            namespace: default
          spec:
            parallelism: 4
            arguments: --out experimental-prometheus-rw
            runner:
              metadata:
                annotations:
                  sidecar.istio.io/inject: "false"
              env:
                - name: K6_PROMETHEUS_RW_SERVER_URL
                  value: http://monitoring-prometheus-kube-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
                - name: K6_PROMETHEUS_RW_PUSH_INTERVAL
                  value: 5s
            script:
              configMap:
                name: sample-stress-test
                file: test.js
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: app
spec:
  serviceAccountName: argo
  templates:
    - name: delete-app
      inputs:
        parameters:
        - name: app
      resource:
        action: delete
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: {{inputs.parameters.app}}
            namespace: argocd

    - name: apply-app
      inputs:
        parameters:
        - name: app
        - name: targetrevision
        - name: values_targetrevision
        - name: values_repourl
        - name: values_path
        - name: limit_cpu
        - name: limit_memory
      resource:
        action: apply
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: {{inputs.parameters.app}}
            namespace: argocd
            finalizers:
            - resources-finalizer.argocd.argoproj.io
          spec:
            destination:
              name: in-cluster
            project: default
            source:
              repoURL: https://github.com/cal324/apps.git
              path: overlays/{{inputs.parameters.app}}
              targetRevision: {{inputs.parameters.targetrevision}}
              helm:
                parameters:
                - name: source.targetRevision
                  value: {{inputs.parameters.targetrevision}}
                - name: values.targetRevision
                  value: {{inputs.parameters.values_targetrevision}}
                - name: values.repoURL
                  value: {{inputs.parameters.values_repourl}}
                - name: values.path
                  value: {{inputs.parameters.values_path}}
                - name: resources.limits.cpu
                  value: {{inputs.parameters.limit_cpu}}
                - name: resources.limits.memory
                  value: {{inputs.parameters.limit_memory}}
            syncPolicy:
              syncOptions: 
              automated:
                prune: true
                selfHeal: true 
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: wait
spec:
  serviceAccountName: default
  templates:
    - name: sleep
      inputs:
        parameters:
        - name: time
      container:
        image: ubuntu
        command: ["/bin/bash", "-c"]
        args:
          - sleep "{{inputs.parameters.time}}";
    - name: wait-fluentd
      container:
        image: bitnami/kubectl:latest
        command: [sh, -c]
        args: ["kubectl wait --for=jsonpath='{.status.readyReplicas}'=1 StatefulSet/veri-fluentd-fluentd -n veri --timeout=300s"]
    - name: wait-fluentd-ds
      container:
        image: bitnami/kubectl:latest
        command: [sh, -c]
        args: ["kubectl wait --for=jsonpath='{.status.numberMisscheduled}'=0 daemonset/veri-fluentd-fluentd -n veri --timeout=300s"]
    - name: wait-fluentbit
      container:
        image: bitnami/kubectl:latest
        command: [sh, -c]
        args: ["kubectl wait --for=jsonpath='{.status.numberMisscheduled}'=0 daemonset/veri-fluentbit-fluentbit-fluent-bit -n veri --timeout=300s"]
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: get-time
spec:
  serviceAccountName: default
  templates:
    - name: get-time
      container:
        image: ubuntu
        command: ["/bin/bash", "-c"]
        args:
          - date +%s%3N;
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: create-annotation
spec:
  serviceAccountName: default
  templates:
    - name: create-annotation
      inputs:
        parameters:
        - name: wf-name
        - name: start-time
        - name: rate
        - name: duration
        - name: limit_cpu
        - name: limit_memory
      container:
        image: ubuntu
        command: ["/bin/bash", "-c"]
        args:
          - |
            apt-get update && apt-get install -y curl jq;
            RESP=`curl -v -X POST -H "Content-Type: application/json" -d '{"name":"perf-test-{{inputs.parameters.start-time}}", "role": "Admin"}' http://admin:admin@monitoring-prometheus-grafana.monitoring.svc/api/auth/keys`;
            APIKEY=`echo $RESP | jq .key -r`
            ENDTIME=`date +%s%3N`;
            curl -v -X POST -H "Authorization: Bearer $APIKEY" -H "Content-Type: application/json" monitoring-prometheus-grafana.monitoring.svc/api/annotations -d '{"time": {{inputs.parameters.start-time}}, "timeEnd": '$ENDTIME', "dashboardUID": "cd29b372-f45a-497d-9c36-1632563e9b4d", "tags": ["perf"], "text": "{{inputs.parameters.wf-name}}(rate:{{inputs.parameters.rate}}-duration:{{inputs.parameters.duration}}-cpu:{{inputs.parameters.limit_cpu}}-memory:{{inputs.parameters.limit_memory}})" } ';
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: aggregator
spec:
  serviceAccountName: default
  entrypoint: deploy
  arguments:
    parameters:
    - {name: wf-name, value: test}
    - {name: targetrevision, value: develop}
    - {name: values_targetrevision, value: HEAD}
    - {name: values_repourl, value: https://github.com/cal324/spec.git}
    - {name: values_path, value: test} 
    - {name: rate, value: 100}
    - {name: duration, value: 180}
    - {name: limit_cpu, value: 100m}
    - {name: limit_memory, value: 128Mi}
    - {name: path, value: http://dummy-nginx.veri.svc}

  templates:
    - name: deploy
      dag:
        tasks:

        - name: get-time
          templateRef: {name: get-time, template: get-time}

        - name: apply-fluentd
          dependencies: [get-time]
          arguments:
            parameters:
            - {name: app, value: veri-fluentd}
            - {name: targetrevision, value: "{{workflow.parameters.targetrevision}}"}
            - {name: values_targetrevision, value: "{{workflow.parameters.values_targetrevision}}"}
            - {name: values_repourl, value: "{{workflow.parameters.values_repourl}}"}
            - {name: values_path, value: "{{workflow.parameters.values_path}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          templateRef: {name: app, template: apply-app}

        - name: wait-fluentd
          dependencies: [apply-fluentd]
          templateRef: {name: wait, template: wait-fluentd}

        - name: apply-fluentbit
          arguments:
            parameters:
            - {name: app, value: veri-fluentbit}
            - {name: targetrevision, value: "{{workflow.parameters.targetrevision}}"}
            - {name: values_targetrevision, value: "{{workflow.parameters.values_targetrevision}}"}
            - {name: values_repourl, value: "{{workflow.parameters.values_repourl}}"}
            - {name: values_path, value: "{{workflow.parameters.values_path}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          dependencies: [wait-fluentd]
          templateRef: {name: app, template: apply-app}

        - name: wait-fluentbit
          dependencies: [apply-fluentbit]
          templateRef: {name: wait, template: wait-fluentbit}

        - name: config-k6
          arguments:
            parameters:
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"}
            - {name: path, value: "{{workflow.parameters.path}}"}
          templateRef: {name: k6, template: config-k6}

        - name: apply-k6
          dependencies: [wait-fluentbit]
          templateRef: {name: k6, template: apply-k6}

        - name: sleep-k6
          dependencies: [apply-k6]
          arguments: {parameters: [{name: time, value: "{{workflow.parameters.duration}}"}]}
          templateRef: {name: wait, template: sleep}

        - name: sleep-k6-buffer
          dependencies: [sleep-k6]
          arguments: {parameters: [{name: time, value: 30}]}
          templateRef: {name: wait, template: sleep}

        - name: create-annotation
          dependencies: [sleep-k6-buffer]
          arguments:
            parameters:
            - {name: wf-name, value: "{{workflow.parameters.wf-name}}"}
            - {name: start-time, value: "{{tasks.get-time.outputs.result}}"}
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          templateRef: {name: create-annotation, template: create-annotation}

        - name: delete-k6
          dependencies: [sleep-k6-buffer]
          templateRef: {name: k6, template: delete-k6}

        - name: delete-fluentbit
          dependencies: [sleep-k6-buffer]
          arguments: {parameters: [{name: app, value: veri-fluentbit}]}
          templateRef: {name: app, template: delete-app}

        - name: delete-fluentd
          dependencies: [delete-fluentbit]
          arguments: {parameters: [{name: app, value: veri-fluentd}]}
          templateRef: {name: app, template: delete-app}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fluentbit-only
spec:
  serviceAccountName: default
  entrypoint: deploy
  arguments:
    parameters:
    - {name: wf-name, value: test}
    - {name: targetrevision, value: develop}
    - {name: values_targetrevision, value: HEAD}
    - {name: values_repourl, value: https://github.com/cal324/spec.git}
    - {name: values_path, value: test}
    - {name: rate, value: 100}
    - {name: duration, value: 180}
    - {name: limit_cpu, value: 100m}
    - {name: limit_memory, value: 128Mi}
    - {name: path, value: http://dummy-nginx.veri.svc}

  templates:
    - name: deploy
      dag:
        tasks:

        - name: get-time
          templateRef: {name: get-time, template: get-time}

        - name: apply-fluentbit
          dependencies: [get-time]
          arguments:
            parameters:
            - {name: app, value: veri-fluentbit}
            - {name: targetrevision, value: "{{workflow.parameters.targetrevision}}"}
            - {name: values_targetrevision, value: "{{workflow.parameters.values_targetrevision}}"}
            - {name: values_repourl, value: "{{workflow.parameters.values_repourl}}"}
            - {name: values_path, value: "{{workflow.parameters.values_path}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          templateRef: {name: app, template: apply-app}

        - name: wait-fluentbit
          dependencies: [apply-fluentbit]
          templateRef: {name: wait, template: wait-fluentbit}

        - name: config-k6
          arguments:
            parameters: 
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"} 
            - {name: path, value: "{{workflow.parameters.path}}"}
          templateRef: {name: k6, template: config-k6}

        - name: apply-k6
          dependencies: [wait-fluentbit]
          templateRef: {name: k6, template: apply-k6}

        - name: sleep-k6
          dependencies: [apply-k6]
          arguments: {parameters: [{name: time, value: "{{workflow.parameters.duration}}"}]}
          templateRef: {name: wait, template: sleep}

        - name: sleep-k6-buffer
          dependencies: [sleep-k6]
          arguments: {parameters: [{name: time, value: 30}]}
          templateRef: {name: wait, template: sleep}

        - name: create-annotation
          dependencies: [sleep-k6-buffer]
          arguments:
            parameters:
            - {name: wf-name, value: "{{workflow.parameters.wf-name}}"}
            - {name: start-time, value: "{{tasks.get-time.outputs.result}}"}
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          templateRef: {name: create-annotation, template: create-annotation}

        - name: delete-k6
          dependencies: [sleep-k6-buffer]
          templateRef: {name: k6, template: delete-k6}

        - name: delete-fluentbit
          dependencies: [sleep-k6-buffer]
          arguments: {parameters: [{name: app, value: veri-fluentbit}]}
          templateRef: {name: app, template: delete-app}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fluentd-only
spec:
  serviceAccountName: default
  entrypoint: deploy
  arguments:
    parameters:
    - {name: wf-name, value: test}
    - {name: targetrevision, value: develop}
    - {name: values_targetrevision, value: HEAD}
    - {name: values_repourl, value: https://github.com/cal324/spec.git}
    - {name: values_path, value: test}
    - {name: rate, value: 100}
    - {name: duration, value: 180}
    - {name: limit_cpu, value: 100m}
    - {name: limit_memory, value: 128Mi}
    - {name: path, value: http://dummy-nginx.veri.svc}
  templates:
    - name: deploy
      dag:
        tasks:

        - name: get-time
          templateRef: {name: get-time, template: get-time}

        - name: apply-fluentd
          dependencies: [get-time]
          arguments:
            parameters:
            - {name: app, value: veri-fluentd}
            - {name: targetrevision, value: "{{workflow.parameters.targetrevision}}"}
            - {name: values_targetrevision, value: "{{workflow.parameters.values_targetrevision}}"}
            - {name: values_repourl, value: "{{workflow.parameters.values_repourl}}"}
            - {name: values_path, value: "{{workflow.parameters.values_path}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}

          templateRef: {name: app, template: apply-app}

        - name: wait-fluentd
          dependencies: [apply-fluentd]
          templateRef: {name: wait, template: wait-fluentd-ds}

        - name: config-k6
          arguments:
            parameters: 
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"} 
            - {name: path, value: "{{workflow.parameters.path}}"}
          templateRef: {name: k6, template: config-k6}

        - name: apply-k6
          dependencies: [wait-fluentd]
          templateRef: {name: k6, template: apply-k6}

        - name: sleep-k6
          dependencies: [apply-k6]
          arguments: {parameters: [{name: time, value: "{{workflow.parameters.duration}}"}]}
          templateRef: {name: wait, template: sleep}

        - name: sleep-k6-buffer
          dependencies: [sleep-k6]
          arguments: {parameters: [{name: time, value: 30}]}
          templateRef: {name: wait, template: sleep}

        - name: create-annotation
          dependencies: [sleep-k6-buffer]
          arguments:
            parameters:
            - {name: wf-name, value: "{{workflow.parameters.wf-name}}"}
            - {name: start-time, value: "{{tasks.get-time.outputs.result}}"}
            - {name: rate, value: "{{workflow.parameters.rate}}"}
            - {name: duration, value: "{{workflow.parameters.duration}}"}
            - {name: limit_cpu, value: "{{workflow.parameters.limit_cpu}}"}
            - {name: limit_memory, value: "{{workflow.parameters.limit_memory}}"}
          templateRef: {name: create-annotation, template: create-annotation}

        - name: delete-k6
          dependencies: [sleep-k6-buffer]
          templateRef: {name: k6, template: delete-k6}

        - name: delete-fluentd
          dependencies: [sleep-k6-buffer]
          arguments: {parameters: [{name: app, value: veri-fluentd}]}
          templateRef: {name: app, template: delete-app}

