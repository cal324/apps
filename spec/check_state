#! /usr/bin/env ruby
require 'json'

def get_argo_apps(app_name)
  JSON.parse(%x(kubectl get apps -n argocd #{app_name} -o json))['status']['resources'].sort{|a,b|a['syncWave'] <=> b['syncWave']}
end

def check_status(apps)
  get_argo_apps(apps['name']).map do |app|
    status = (app['status'] == 'Synced' or app['status'] == 'OutOfSync')
    health_status = (!app.key?('health') || app['health']['status'] == 'Healthy')
    puts "  %s: status(%s)/health.status(%s)" % [app['name'], app['status'], app.key?('health') ? app['health']['status'] : 'null' ] if !(status and health_status)
    status and health_status
  end.all?
end

get_argo_apps('apps').each do |overlays|
  while true
    get_argo_apps(overlays['name']).each do |templates|
      puts get_argo_apps(overlays['name']).map{|t|"%s(%s)" % [t['name'], t['health']['status']]}.join(' -> ')
      (sleep 10 and next) unless check_status overlays
      while true
        break if check_status templates
        sleep 10
      end
    end
    break if check_status overlays
    sleep 10
  end
end
