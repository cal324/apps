function check_resource_status(){
  RESOURCE_NAME=$1

  kubectl get apps -A > check.log
  while true
  do
    result=$(kubectl get apps -n argocd $RESOURCE_NAME)
    if [ $? -eq 0 ]; then
      kubectl wait apps -n argocd $RESOURCE_NAME --for jsonpath='{status.health.status}'=Healthy --timeout=600s
      if [ $? -ne 0 ]; then
        exit 1
      fi
      break
    fi
    sleep 10
    kubectl get apps -A > current.log
    diff check.log current.log
    mv current.log check.log
  done
}

function check_all_app_status(){
  for i in istio monitoring fluent-aggregator
  do
    for j in `kubectl get app -n argocd $i -o json | jq -r ".status.resources[]|.name"`
    do
      check_resource_status $j
    done
  done
}

sleep 10
check_all_app_status
